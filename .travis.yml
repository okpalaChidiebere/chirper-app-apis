# documentation: https://docs.travis-ci.com/user/languages/minimal-and-generic/#minimal
language: generic
rvm: system
os: linux
dist: trusty

services:
  - docker

# Only clone the most recent commit
git:
  depth: 1

notifications:
  email: false

env:
  global:
    - USER="okpalaChidiebere"
    - GEN_REPO_GO="chirper-app-gen-protos"
    - GH_REPO="github.com/${USER}/${GEN_REPO_GO}.git"
    - GO111MODULE=auto
    - GOPRIVATE="github.com/${USER}"

before_install:
  # we will be dealing with private repos so we have to set github auth: https://docs.travis-ci.com/user/private-dependencies/#api-token
  - echo -e "\n\nmachine github.com\n login $CI_USER_TOKEN\n" > ~/.netrc
  # make sure the bash script is executable
  - chmod +x go_packages.sh
  # dynamically install the required go version we want: https://docs.travis-ci.com/user/reference/trusty/#go-images
  - eval $(gimme 1.20.2)
  - if [ -d gen ]; then rm -rf gen; fi
  - docker pull bufbuild/buf:1.15.1
  - docker images

# Skip any install step. Don't `go get` dependencies
install: echo "Skip global installing..."

# Scripts to be run such as tests
before_script:
  - docker run --volume "$(pwd):/workspace" --workdir /workspace bufbuild/buf:1.15.1 lint
  - docker run --volume "$(pwd):/workspace" --workdir /workspace bufbuild/buf:1.15.1 breaking --against "https://github.com/${TRAVIS_REPO_SLUG}.git"
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then export BRANCH_NAME=$TRAVIS_BRANCH; else BRANCH_NAME=$TRAVIS_PULL_REQUEST_BRANCH; fi
  - if [ -z "$TRAVIS_PULL_REQUEST_SHA" ]; then SHORT_SHA=${TRAVIS_COMMIT:0 -7}; else SHORT_SHA=${TRAVIS_PULL_REQUEST_SHA:0 -7}; fi

script:
  # generate protos for apis we want to server on HTTP/1.1 as well
  - docker run --volume "$(pwd):/workspace" --workdir /workspace bufbuild/buf:1.15.1 generate
    --path=tweet
  # generate protos for apis we want to server on HTTP/2 as well
  - docker run --volume "$(pwd):/workspace" --workdir /workspace bufbuild/buf:1.15.1 generate --template=buf.connect_go.gen.yaml
    --path=user
    --path=image_filter
  - ./go_packages.sh
  - git clone --progress --verbose "https://${GH_REPO}"
  - git remote update origin

# Tasks to perform after the process is successful.
after_success:
  - cd ${GEN_REPO_GO}
  - git checkout -b $BRANCH_NAME
  - git branch --set-upstream-to=origin/$BRANCH_NAME $BRANCH_NAME || true
  - git reset --hard origin/$BRANCH_NAME
  - cp -r ../gen/go/* .
  - git add .
  - git commit -m "regenerated protos based on $SHORT_SHA on chirper-app-apis branch $BRANCH_NAME"
  - git push -u origin $BRANCH_NAME
  - echo -e "Done with magic\n"
